var request = require("request");

module.exports = function(pkg, callback){
  var currentSnip = pkg.currentSnip;
  var pkg = pkg.pkg;
  var snip = pkg.latest.sniper;

  // load browserified version
  snip.js.push("http://wzrd.in/bundle/" + pkg.name + "@" + pkg.version);

  // expose other bundles
  if(snip.exposed !== undefined){
    for(var i=0;i<snip.exposed.length; i++){
      snip.js.push("http://wzrd.in/bundle/" + snip.exposed[i] + "@latest");
    }
  }

  var expected = 0;
  var counter = 0;
  var finalTrigger = function(){
    counter++;
    if(expected == counter){
      callback(snip);
    }
  }

  var baseURL = convertGithubToRaw(pkg.github.html_url + "/" + pkg.github.default_branch);

  // css
  // the user might specify alternative css locations
  if( snip.buildCSS !== undefined){
    snip.css = snip.buildCSS;
  }

  // translate all absolute URLs to github
  for(var i in snip.css){
    if(snip.css[i].charAt(0) === "/"){
      snip.css[i] = baseURL + snip.css[i];
    }
  }

  // remove the build js (generated by browserify)
  var index = 0;
  while(index < snip.js.length){ 
    if(snip.js[index].substring(0,7) === "/build/"){
      snip.js.shift();
    } else {
      index++;
    }
  }

  // js
  expected++;
  snip.inlineScript = "";
  var jsURL = convertGithubToRaw(snip.srcs[currentSnip].js.html_url);
  request.get(jsURL, function (err, response, body) {
    snip.inlineScript = body;
    finalTrigger();
  });

  // html
  snip.inlineBody = "";
  if(snip.srcs[currentSnip].html !== undefined ){
    expected++;
    var htmlURL = convertGithubToRaw(snip.srcs[currentSnip].html.html_url);
    request.get(htmlURL, function (err, response, body) {
      snip.inlineBody = body;
      finalTrigger();
    });
  }else{
    snip.inlineBody = "<div id=yourDiv></div>";
  }
}

function convertGithubToRaw(contentURL){
  contentURL = contentURL.replace("github.com", "raw.githubusercontent.com");
  contentURL = contentURL.replace("blob/", "");
  return contentURL;
}
